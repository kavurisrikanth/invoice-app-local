(Widget ResendPasswordView {
    name 'ResendPasswordView'
    package 'invoice.com'
    category 'UserDefined'
    properties [
        (password {
            name 'Password'
            type ({
                primitive String
            })
            internal true
        })
    ]
    build (CRef column {
        name 'Column'
        component #Column
        data [
            ({
                prop #crossAxisAlignment
                value 'start'
            })
            ({
                prop #padding
                value '15'
            })
            ({
                prop #decoration
                values [
                    ({
                        prop #color
                        value '@c2'
                    })
                ]
            })
        ]
        children [
            (CRef textView {
                name 'TextView'
                component #TextView
                style #HeadlineThree
                data [
                    ({
                        prop #data
                        value 'Resend Password'
                    })
                ]
            })
            (CRef textView2 {
                name 'TextView2'
                component #TextView
                style #SubText
                data [
                    ({
                        prop #data
                        value 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.'
                    })
                    ({
                        prop #softWrap
                        value 'true'
                    })
                ]
            })
            (CRef inputFieldWithLabel {
                name 'InputFieldWithLabel'
                component #InputFieldWithLabel
                data [
                    ({
                        prop #name
                        value 'New Password'
                    })
                    ({
                        prop #placeHolder
                        value 'Enter New Password'
                    })
                    ({
                        prop #value
                        bind true
                        bindTo `password`
                    })
                    ({
                        prop #errors
                        value 'passwordErrors'
                    })
                ]
                twoWayBinding true
            })
            (CRef inputFieldWithLabel2 {
                name 'InputFieldWithLabel2'
                component #InputFieldWithLabel
                data [
                    ({
                        prop #margin
                        value '10 0'
                    })
                    ({
                        prop #name
                        value 'Confirm Password'
                    })
                    ({
                        prop #placeHolder
                        value 'Enter Confirm Password'
                    })
                    ({
                        prop #value
                        bind true
                        bindTo `password`
                    })
                ]
                twoWayBinding true
            })
            (CRef row {
                name 'Row'
                component #Row
                children [
                    (CRef button {
                        name 'Button'
                        component #Button
                        style #Primary
                        data [
                            ({
                                prop #expand
                                value 'true'
                            })
                        ]
                        child (CRef buttonText {
                            name 'ButtonText'
                            component #TextView
                            data [
                                ({
                                    prop #data
                                    value 'Resend Password'
                                })
                            ]
                        })
                    })
                ]
            })
        ]
    })
    eventHandlers [
        (onPressedButtonHandler {
            name 'onPressedButtonHandler'
            type OnEvent
            on #button
            event #onPressed
            block ```
                /* Your code here. */
            ```
        })
    ]
})